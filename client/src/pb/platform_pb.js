// source: platform.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.NewPlatform', null, global);
goog.exportSymbol('proto.proto.Platform', null, global);
goog.exportSymbol('proto.proto.PlatformListRequest', null, global);
goog.exportSymbol('proto.proto.PlatformListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.NewPlatform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.NewPlatform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.NewPlatform.displayName = 'proto.proto.NewPlatform';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Platform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Platform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Platform.displayName = 'proto.proto.Platform';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PlatformListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.PlatformListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.PlatformListRequest.displayName = 'proto.proto.PlatformListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PlatformListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.PlatformListResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.PlatformListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.PlatformListResponse.displayName = 'proto.proto.PlatformListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.NewPlatform.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.NewPlatform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.NewPlatform} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.NewPlatform.toObject = function(includeInstance, msg) {
  var f, obj = {
    unitname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unitclass: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operationField: jspb.Message.getFieldWithDefault(msg, 3, ""),
    generalcategory: jspb.Message.getFieldWithDefault(msg, 4, ""),
    generaltype: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lethalitylevel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cruisingspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    maxspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    combatrange: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    fuelload: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    countryorigin: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.NewPlatform}
 */
proto.proto.NewPlatform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.NewPlatform;
  return proto.proto.NewPlatform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.NewPlatform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.NewPlatform}
 */
proto.proto.NewPlatform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitclass(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperationField(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeneralcategory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeneraltype(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLethalitylevel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCruisingspeed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxspeed(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCombatrange(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelload(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryorigin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.NewPlatform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.NewPlatform.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.NewPlatform} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.NewPlatform.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnitname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnitclass();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperationField();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGeneralcategory();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGeneraltype();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLethalitylevel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCruisingspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getMaxspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getCombatrange();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getFuelload();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getCountryorigin();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string unitName = 1;
 * @return {string}
 */
proto.proto.NewPlatform.prototype.getUnitname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setUnitname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string unitClass = 2;
 * @return {string}
 */
proto.proto.NewPlatform.prototype.getUnitclass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setUnitclass = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string operation_field = 3;
 * @return {string}
 */
proto.proto.NewPlatform.prototype.getOperationField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setOperationField = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string generalCategory = 4;
 * @return {string}
 */
proto.proto.NewPlatform.prototype.getGeneralcategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setGeneralcategory = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string generalType = 5;
 * @return {string}
 */
proto.proto.NewPlatform.prototype.getGeneraltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setGeneraltype = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lethalityLevel = 6;
 * @return {string}
 */
proto.proto.NewPlatform.prototype.getLethalitylevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setLethalitylevel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional float cruisingSpeed = 7;
 * @return {number}
 */
proto.proto.NewPlatform.prototype.getCruisingspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setCruisingspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float maxSpeed = 8;
 * @return {number}
 */
proto.proto.NewPlatform.prototype.getMaxspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setMaxspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float combatRange = 9;
 * @return {number}
 */
proto.proto.NewPlatform.prototype.getCombatrange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setCombatrange = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float fuelLoad = 10;
 * @return {number}
 */
proto.proto.NewPlatform.prototype.getFuelload = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setFuelload = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string countryOrigin = 11;
 * @return {string}
 */
proto.proto.NewPlatform.prototype.getCountryorigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.NewPlatform} returns this
 */
proto.proto.NewPlatform.prototype.setCountryorigin = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Platform.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Platform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Platform} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Platform.toObject = function(includeInstance, msg) {
  var f, obj = {
    unitname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unitclass: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operationField: jspb.Message.getFieldWithDefault(msg, 3, ""),
    generalcategory: jspb.Message.getFieldWithDefault(msg, 4, ""),
    generaltype: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lethalitylevel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cruisingspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    maxspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    combatrange: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    fuelload: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    countryorigin: jspb.Message.getFieldWithDefault(msg, 11, ""),
    id: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Platform}
 */
proto.proto.Platform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Platform;
  return proto.proto.Platform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Platform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Platform}
 */
proto.proto.Platform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitclass(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperationField(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeneralcategory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeneraltype(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLethalitylevel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCruisingspeed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxspeed(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCombatrange(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelload(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryorigin(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Platform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Platform.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Platform} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Platform.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnitname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnitclass();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperationField();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGeneralcategory();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGeneraltype();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLethalitylevel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCruisingspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getMaxspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getCombatrange();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getFuelload();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getCountryorigin();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string unitName = 1;
 * @return {string}
 */
proto.proto.Platform.prototype.getUnitname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setUnitname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string unitClass = 2;
 * @return {string}
 */
proto.proto.Platform.prototype.getUnitclass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setUnitclass = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string operation_field = 3;
 * @return {string}
 */
proto.proto.Platform.prototype.getOperationField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setOperationField = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string generalCategory = 4;
 * @return {string}
 */
proto.proto.Platform.prototype.getGeneralcategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setGeneralcategory = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string generalType = 5;
 * @return {string}
 */
proto.proto.Platform.prototype.getGeneraltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setGeneraltype = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lethalityLevel = 6;
 * @return {string}
 */
proto.proto.Platform.prototype.getLethalitylevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setLethalitylevel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional float cruisingSpeed = 7;
 * @return {number}
 */
proto.proto.Platform.prototype.getCruisingspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setCruisingspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float maxSpeed = 8;
 * @return {number}
 */
proto.proto.Platform.prototype.getMaxspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setMaxspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float combatRange = 9;
 * @return {number}
 */
proto.proto.Platform.prototype.getCombatrange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setCombatrange = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float fuelLoad = 10;
 * @return {number}
 */
proto.proto.Platform.prototype.getFuelload = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setFuelload = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string countryOrigin = 11;
 * @return {string}
 */
proto.proto.Platform.prototype.getCountryorigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setCountryorigin = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string id = 12;
 * @return {string}
 */
proto.proto.Platform.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Platform} returns this
 */
proto.proto.Platform.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PlatformListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PlatformListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PlatformListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PlatformListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PlatformListRequest}
 */
proto.proto.PlatformListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PlatformListRequest;
  return proto.proto.PlatformListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PlatformListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PlatformListRequest}
 */
proto.proto.PlatformListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PlatformListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PlatformListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PlatformListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PlatformListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.PlatformListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PlatformListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PlatformListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PlatformListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PlatformListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    platformsList: jspb.Message.toObjectList(msg.getPlatformsList(),
    proto.proto.Platform.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PlatformListResponse}
 */
proto.proto.PlatformListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PlatformListResponse;
  return proto.proto.PlatformListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PlatformListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PlatformListResponse}
 */
proto.proto.PlatformListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Platform;
      reader.readMessage(value,proto.proto.Platform.deserializeBinaryFromReader);
      msg.addPlatforms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PlatformListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PlatformListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PlatformListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PlatformListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatformsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Platform.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Platform platforms = 1;
 * @return {!Array<!proto.proto.Platform>}
 */
proto.proto.PlatformListResponse.prototype.getPlatformsList = function() {
  return /** @type{!Array<!proto.proto.Platform>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Platform, 1));
};


/**
 * @param {!Array<!proto.proto.Platform>} value
 * @return {!proto.proto.PlatformListResponse} returns this
*/
proto.proto.PlatformListResponse.prototype.setPlatformsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Platform=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Platform}
 */
proto.proto.PlatformListResponse.prototype.addPlatforms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Platform, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.PlatformListResponse} returns this
 */
proto.proto.PlatformListResponse.prototype.clearPlatformsList = function() {
  return this.setPlatformsList([]);
};


goog.object.extend(exports, proto.proto);
